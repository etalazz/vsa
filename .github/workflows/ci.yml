name: CI

on: [push, pull_request, workflow_dispatch]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Unit & integration tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Debug trigger context
        run: |
          echo "event=${{ github.event_name }}"
          echo "ref=${{ github.ref }}"
          echo "sha=${{ github.sha }}"
          echo "actor=${{ github.actor }}"

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Verify modules
        run: |
          go mod tidy -v
          go mod download

      - name: Vet
        continue-on-error: true
        run: go vet $(go list ./... | grep -vE '/benchmarks($|/)|/test/e2e($|/)')

      - name: Test (race + coverage)
        run: >
          go test -race -coverprofile=coverage.out -covermode=atomic
          $(go list ./... | grep -vE '/benchmarks($|/)|/test/e2e($|/)')

      - name: Coverage summary
        run: go tool cover -func=coverage.out | tee coverage.txt

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.out
          flags: unittests
          fail_ci_if_error: false
          # token: ${{ secrets.CODECOV_TOKEN }} # only needed for private repos

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            coverage.out
            coverage.txt

  e2e:
    name: End-to-end tests (build tag e2e)
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Verify modules
        run: |
          go mod tidy -v
          go mod download

      - name: Run E2E tests
        env:
          VSA_CHURN_LIVE: "0"
        run: |
          go test -tags=e2e ./test/e2e -v -count=1 -timeout=10m
